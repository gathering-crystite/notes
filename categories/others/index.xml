<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Others on Notes for Scott Eissfeldt</title>
    <link>https://notes.eissfeldt.com/categories/others.html</link>
    <description>Recent content in Others on Notes for Scott Eissfeldt</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 01 Feb 2018 16:40:00 -0800</lastBuildDate>
    
	<atom:link href="https://notes.eissfeldt.com/categories/others/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Google Cloud - Set IAM Policy with a .yml config file</title>
      <link>https://notes.eissfeldt.com/post/set-iam-policy-gcp.html</link>
      <pubDate>Thu, 01 Feb 2018 16:40:00 -0800</pubDate>
      
      <guid>https://notes.eissfeldt.com/post/set-iam-policy-gcp.html</guid>
      <description>Pointing and clicking to setup access to services is no fun, and it does not scale. It&amp;rsquo;s more fun to create a YAML configuration file and push it with a CLI command. In this case, we&amp;rsquo;ll use gcloud.
 gcloud projects get-iam-policy project_id
 and
 gcloud projects set-iam-pollicy project_id configuration.yml
 View the policy with `gcloud projects get-iam-policy project_id&amp;rsquo;
$ gcloud projects get-iam-policy g5-scott-2 bindings: - members: - user:someoneelse@ThisIsFake.com role: roles/owner etag: BwVjoLrKlS0= version: 1  Save that output locally to a .</description>
    </item>
    
    <item>
      <title>Google Fi Short Codes</title>
      <link>https://notes.eissfeldt.com/post/google-fi-short-codes.html</link>
      <pubDate>Sat, 27 Jan 2018 10:51:34 -0800</pubDate>
      
      <guid>https://notes.eissfeldt.com/post/google-fi-short-codes.html</guid>
      <description>During a suport call with Google FI for a Pixel 2, I was told about some short codes. The codes can be used to obtain your current network information, repair a bad activation, turn on the Auto Swich feature, or connect to specific carriers.
On the call, I used both of these codes:
*#*#344636#*#* and *#*#34777#*#*  After a little further ressearch, these are all the codes I found more of these online.</description>
    </item>
    
    <item>
      <title>Workaround for Terraform Error DBParameterGroup not found</title>
      <link>https://notes.eissfeldt.com/post/terraform-state-rm.html</link>
      <pubDate>Mon, 22 Jan 2018 21:27:47 -0800</pubDate>
      
      <guid>https://notes.eissfeldt.com/post/terraform-state-rm.html</guid>
      <description>The terraform destroy command outputs a false error as it is not able to delete an AWS RDS MySQL DB.
Error refreshing state: 1 error(s) occurred: * module.hortonworks.aws_db_parameter_group.hortonworks: aws_db_parameter_group.hortonworks: DBParameterGroupNotFound: DBParameterGroup not found: dsdev-105-rds-param-hortonworks status code: 404, request id: c9083eec-aadb-11e7-9855-8f67280331c5  To workaround this error, use the terraform state rm command to remove the module where terraform is showing an error.
Fri Oct 06 14:21:18 root@M062-PDX /Users/seissfeldt/ssdc/dexcom-ansible/terraform/aws/env-main-us-dev $ terraform state rm module.</description>
    </item>
    
    <item>
      <title>Aws Cannot Share Encrypted Volumes Across Accounts</title>
      <link>https://notes.eissfeldt.com/post/aws-cannot-share-encrypted-volumes-across-accounts.html</link>
      <pubDate>Mon, 22 Jan 2018 21:20:44 -0800</pubDate>
      
      <guid>https://notes.eissfeldt.com/post/aws-cannot-share-encrypted-volumes-across-accounts.html</guid>
      <description>We use different AWS accounts for production and development. We also use encrypted AMI&amp;rsquo;s. Writing some ansible code, I kept erroring out on a known-good AMI. The reason was I could not share AMI across encrypted accounts.
 You can&amp;rsquo;t copy an encrypted AMI that was shared with you from another account. Instead, if the underlying snapshot and encryption key were shared with you, you can copy the snapshot while re-encrypting it with a key of your own.</description>
    </item>
    
    <item>
      <title>Redirecting standard error into standard output from your commands in unix into log files</title>
      <link>https://notes.eissfeldt.com/post/direct-output-to-log.html</link>
      <pubDate>Mon, 22 Jan 2018 21:18:51 -0800</pubDate>
      
      <guid>https://notes.eissfeldt.com/post/direct-output-to-log.html</guid>
      <description>Sometimes, we&amp;rsquo;re not able to view the output of standard error, or we&amp;rsquo;d like to keep this in a log file to search later. Saving the results of standard output can be useful for troublshooting issues the future.
To do this, we can redirct standard error into standard output and save this to a log file.
Adding &amp;ldquo;2&amp;gt;&amp;amp;1&amp;rdquo; to the end of your command will redirct the standard error into standard output.</description>
    </item>
    
    <item>
      <title>Which-Is-Kerberos-Admin-Server</title>
      <link>https://notes.eissfeldt.com/post/which-is-kerberos-admin-server.html</link>
      <pubDate>Mon, 22 Jan 2018 21:16:52 -0800</pubDate>
      
      <guid>https://notes.eissfeldt.com/post/which-is-kerberos-admin-server.html</guid>
      <description>To see which keytab server your client is trying to authenticate, you can run these commands.
export KRB5_TRACE=/dev/stdout kinit -k -t username.keytab username@EC2.INTERNAL -V  </description>
    </item>
    
    <item>
      <title>In Centos, add user</title>
      <link>https://notes.eissfeldt.com/post/adding-users-in-centos.html</link>
      <pubDate>Mon, 22 Jan 2018 21:11:44 -0800</pubDate>
      
      <guid>https://notes.eissfeldt.com/post/adding-users-in-centos.html</guid>
      <description>Manual steps to add a user with sudo accecss in centos
adduser -U -G adm,wheel username -s /bin/bash &amp;amp;&amp;amp; su -l username &amp;amp;&amp;amp; mkdir .ssh &amp;amp;&amp;amp; chmod 0700 .ssh &amp;amp;&amp;amp; cd .ssh/ vi authorized_keys ssh-rsa AAAAB3NzaThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFakeThisIsFake underthehood@grossinhere.local chmod 0600 authorized_keys  </description>
    </item>
    
    <item>
      <title>First Post!</title>
      <link>https://notes.eissfeldt.com/post/new-notes-new-posts.html</link>
      <pubDate>Mon, 22 Jan 2018 20:45:25 -0800</pubDate>
      
      <guid>https://notes.eissfeldt.com/post/new-notes-new-posts.html</guid>
      <description>First Post This is the first post for notes.eissfeldt.com
https://notes.eissfeldt.com/  My intention is to add to this blog when I do something new, when I&amp;rsquo;d like to remember something I&amp;rsquo;ve done, or I think it might be helpful to others.
To write this blog, I&amp;rsquo;m using OSX locally on my notebook. I&amp;rsquo;m using github for my repo, and I&amp;rsquo;m publishing to a static AWS site using CloufFront and S3 buckets.</description>
    </item>
    
  </channel>
</rss>